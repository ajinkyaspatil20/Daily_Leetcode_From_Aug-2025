import java.util.HashMap;
import java.util.TreeSet;

class Solution {
    public int[] avoidFlood(int[] rains) {
        int n = rains.length;
        int[] ans = new int[n];
        
        HashMap<Integer, Integer> fullLakes = new HashMap<>();
        TreeSet<Integer> dryDays = new TreeSet<>();
        
        for (int i = 0; i < n; i++) {
            int lake = rains[i];
            
            if (lake > 0) {
                ans[i] = -1;
                
                if (fullLakes.containsKey(lake)) {
                    int lastRainDay = fullLakes.get(lake);
                    
                    Integer dryDayIndex = dryDays.ceiling(lastRainDay + 1);
                    
                    if (dryDayIndex == null) {
                        return new int[0];
                    }
                    
                    ans[dryDayIndex] = lake;
                    dryDays.remove(dryDayIndex);
                    fullLakes.put(lake, i);
                    
                } else {
                    fullLakes.put(lake, i);
                }
                
            } else {
                dryDays.add(i);
                ans[i] = 1; 
            }
        }
        
        return ans;
    }
}
